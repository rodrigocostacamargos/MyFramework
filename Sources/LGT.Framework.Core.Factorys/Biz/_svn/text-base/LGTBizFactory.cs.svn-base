using System;
using System.Reflection;
using LGT.Framework.Core.Helper;
using LGT.Framework.Core.Infra;
using LGT.Framework.Core.Interfaces.Biz;

namespace LGT.Framework.Core.Factorys.Biz
{
    public sealed class LGTBizFactory : LGTBaseFactory<ILGTBizBase>, ILGTBizFactory
    {
        private LGTBizFactory()
        {
        }

        protected override T1 CreateInstance<T1>(Type concretType)
        {
            var proxyReturn = concretType != null ? new LGTBaseBizProxy<T1>(concretType)
                                                 : new LGTBaseBizProxy<T1>();

            return proxyReturn.GetTransparentProxy();
        }
        protected override void LoadDependeceAssembly()
        {
            Assembly.LoadFrom(LGTHelperConfiguraton.ConcretDaoClassAssembly);
        }
        protected override string ConcrectObjectAssembly()
        {

            return LGTHelperConfiguraton.ConcretBizClassAssembly;
        }

        public static ILGTBizFactory Current
        {
            get
            {
                return new LGTBizFactory();
            }
        }
    }
}