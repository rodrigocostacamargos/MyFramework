using System;
using LGT.Framework.Core.Helper;
using LGT.Framework.Core.Infra;
using LGT.Framework.Core.Interfaces.Base;
using LGT.Framework.Core.Interfaces.DBContext.EF;

namespace LGT.Framework.Core.Factorys.DBContext
{
    public sealed class LGTDBContextFactory : LGTBaseFactory<ILGTDbContex>, ILGTDBContextFactory
    {
        private LGTDBContextFactory()
        {
        }

        protected override void LoadDependeceAssembly()
        {
            
        }

        protected override T1 CreateInstance<T1>(Type concretType)
        {
            T1 objectReturn;
            if (concretType != null)
                objectReturn = (T1)Activator.CreateInstance(concretType);
            else
                objectReturn = Activator.CreateInstance<T1>();
            return objectReturn;
        }

        protected override string ConcrectObjectAssembly()
        {
            return LGTHelperConfiguraton.ConcretDBContextAssembly;
        }

        public static ILGTDBContextFactory Current
        {
            get
            {
                return new LGTDBContextFactory();
            }
        }

    }
}